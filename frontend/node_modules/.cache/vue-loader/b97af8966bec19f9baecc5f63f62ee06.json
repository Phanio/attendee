{"remainingRequest":"C:\\PHANIO\\PROG\\TP\\attendees\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\PHANIO\\PROG\\TP\\attendees\\frontend\\src\\components\\SiginUp.vue?vue&type=style&index=0&id=3fe8a071&scoped=true&lang=css&","dependencies":[{"path":"C:\\PHANIO\\PROG\\TP\\attendees\\frontend\\src\\components\\SiginUp.vue","mtime":1586731223244},{"path":"C:\\PHANIO\\PROG\\TP\\attendees\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\PHANIO\\PROG\\TP\\attendees\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\PHANIO\\PROG\\TP\\attendees\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\PHANIO\\PROG\\TP\\attendees\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\PHANIO\\PROG\\TP\\attendees\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQpsYWJlbCwNCmlucHV0IHsNCiAgZGlzcGxheTogYmxvY2s7DQogIG1hcmdpbi1ib3R0b206IDEwcHg7DQp9DQouYmctYmxvY2sgew0KICBtYXgtd2lkdGg6IDUwMHB4Ow0KICBtYXJnaW46IGF1dG87DQogIHBhZGRpbmc6IDEwcHg7DQogIGJhY2tncm91bmQtY29sb3I6IHNpbHZlcjsNCiAgYm9yZGVyLXJhZGl1czogMzBweDsNCn0NCi5lcnJvcnsNCiAgY29sb3I6IHJlZDsNCn0NCg=="},{"version":3,"sources":["SiginUp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SiginUp.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"bg-block\">\r\n    <h2>Sigin Up</h2>\r\n     <p v-if=\"errors.length\" class=\"error\">\r\n      <b>Please correct the following error(s):</b>\r\n      <ul>\r\n        <li v-for=\"error in errors\" v-bind:key=\"error.key\">{{ error.msg }}</li>\r\n      </ul>\r\n    </p>\r\n\r\n    <p style=\"color:green\">{{errors.success}}</p>\r\n  \r\n    <label for=\"usernameInput\">Username</label>\r\n    <input v-model=\"username\" type=\"text\" id=\"usernameInput\" />\r\n    <label for=\"password\">Password</label>\r\n    <input v-model=\"password\" type=\"password\" id=\"password\" />\r\n    <label for=\"confirmPassword\">Confirm your Password</label>\r\n    <input v-model=\"passwordConf\" type=\"password\" id=\"confirmPassword\" />\r\n    <button v-on:click=\"submitForm\">Send</button>\r\n    <br />\r\n    <div style=\"text-align: right;\">\r\n      <a href=\"#\" v-on:click=\"login\">Login</a>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { siginUp } from \"../services/attendees.js\";\r\nexport default {\r\n  name: \"SiginUp\",\r\n  data() {\r\n    return {\r\n      errors: [],\r\n      username: null,\r\n      password: null,\r\n      passwordConf: null,\r\n    };\r\n  },\r\n  props: {},\r\n  created() {},\r\n  \r\n  methods: {\r\n    randomKey() {\r\n      return Math.random();\r\n    },\r\n    checkForm() {\r\n      if (!this.username) {\r\n        this.errors.push({ key: this.randomKey(), msg: \"Username required.\" });\r\n        return false;\r\n      }\r\n      if (!this.password) {\r\n        this.errors.push({ key: this.randomKey(), msg: \"Password required.\" });\r\n        return false;\r\n      }\r\n      if (!this.passwordConf) {\r\n        this.errors.push({\r\n          key: this.randomKey(),\r\n          msg: \"Password confirm required.\",\r\n        });\r\n        return false;\r\n      }\r\n      if (this.password !== this.passwordConf) {\r\n        this.errors.push({\r\n          key: this.randomKey(),\r\n          msg: \"Password must be equal to password confirm.\",\r\n        });\r\n        return false;\r\n      }\r\n\r\n      /* else if (!this.validEmail(this.email)) {\r\n        this.errors.push('Valid email required.');\r\n      } */\r\n\r\n      return true;\r\n    },\r\n    submitForm() {\r\n      if (this.checkForm()) {\r\n        siginUp({\r\n          username: this.username,\r\n          password: this.password,\r\n        })\r\n          .then((resp) => {\r\n            if (resp.status === 200) {\r\n              resp.json().then((msg) => {\r\n                this.errors = [];\r\n                this.errors['success'] = msg;\r\n                setTimeout(() => {\r\n                  this.$emit(\"loginOption\");\r\n                }, 5000);\r\n              });\r\n            } else {\r\n              resp\r\n                .json()\r\n                .then((rep) =>\r\n                  this.errors.push({ key: this.randomKey(), msg: rep })\r\n                );\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.errors.push(error);\r\n          });\r\n      }\r\n    },\r\n    login() {\r\n      this.$emit(\"loginOption\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\nlabel,\r\ninput {\r\n  display: block;\r\n  margin-bottom: 10px;\r\n}\r\n.bg-block {\r\n  max-width: 500px;\r\n  margin: auto;\r\n  padding: 10px;\r\n  background-color: silver;\r\n  border-radius: 30px;\r\n}\r\n.error{\r\n  color: red;\r\n}\r\n</style>\r\n"]}]}